//reset CSS

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

//reset CSS

//TO%
@function prc($pxOne, $pxTwo) {
  $result: ($pxOne/$pxTwo) * 100%;
  @return $result;
}

//REM
@function rem($px) {
  $result: ($px/16) + rem;
  @return $result;
}
//EM

@function em($px) {
  $result: ($px/16) + rem;
  @return $result;
}

// адаптивное свойство
$maxWidth: 1920 / 16; //максимальный размер экрана (px)
$maxWidthContainer: 1200 / 16; //максимальный размер контейнера (px)

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: ($startSize / 16)- ($minSize / 16);
  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: ($startSize / 16) + rem;
    @media (max-width: #{$maxWidthContainer + rem}) {
      #{$property}: calc(
        #{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidthContainer -
              20})
      );
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: ($startSize / 16) + rem;
    @media (min-width: #{$maxWidthContainer + rem}) {
      #{$property}: calc(
        #{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidth -
              20})
      );
    }
  } @else {
    //Всегда
    #{$property}: calc(
      #{($minSize / 16) +
        rem} +
        #{$addSize} *
        ((100vw - 20rem) / #{$maxWidth - 20})
    );
  }
}
//@include adaptiv-value("значение", начальный размер, конечный размер, тип(1-меньше контейнера, 2-больше, 0-всегда))
@font-face {
  font-family: 'Proxima Nova';
  src: url('./font/ProximaNova-Regular.eot');
  src: local('Proxima Nova Regular'), local('ProximaNova-Regular'),
    url('./font/ProximaNova-Regular.eot?#iefix') format('embedded-opentype'),
    url('./font/ProximaNova-Regular.woff') format('woff'),
    url('./font/ProximaNova-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@import 'uikit';
.content {
  max-width: 1920px;
  margin: auto;
}
.header {
  &__top {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: rem(20) rem(50);
    border-bottom: 1px solid #1e2e3673;

    &-social {
      display: flex;
      align-items: center;
      column-gap: 5px;
      h5 {
        text-transform: unset;
      }
      a {
        display: flex;
        align-items: center;
      }
    }
    &-nav {
      display: flex;
      align-items: center;
      ul {
        li {
          margin-right: 15px;
          display: inline-block;
          text-transform: uppercase;
          position: relative;
          &:last-child {
            margin-right: 0;
          }
          &::after {
            content: '';
            position: absolute;
            height: 3px;
            width: 0;
            bottom: -2px;
            left: 0;
            right: 0;
            background-color: #44c697;
            transition: 0.3s;
          }
          &:hover {
            &::after {
              content: '';
              position: absolute;
              height: 3px;
              width: 100%;
              bottom: -2px;
              left: 0;
              right: 0;
              background-color: #44c697;
            }
          }
        }
      }
    }
    &-tel {
      transition: 0.3s;
      svg path {
        transition: 0.3s;
      }
      &:hover {
        color: $color-theme;
        path {
          stroke: $color-theme;
        }
      }
      display: flex;
      margin-left: 50px;
    }
  }
  &__bottom {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: rem(15) rem(50);
    &-nav {
      display: flex;
      align-items: center;
      ul {
        li {
          align-self: center;
          display: inline-block;
          text-transform: uppercase;
          position: relative;
          margin-right: 20px;
          &::after {
            content: '';
            position: absolute;
            height: 3px;
            width: 0;
            bottom: -2px;
            left: 0;
            right: 0;
            background-color: #44c697;
            transition: 0.3s;
          }
          &:hover {
            &::after {
              content: '';
              position: absolute;
              height: 3px;
              width: 100%;
              bottom: -2px;
              left: 0;
              right: 0;
              background-color: #44c697;
            }
          }
          &::before {
            content: '';
            display: block;
            position: absolute;
            right: -15px;
            top: 7px;
            width: 5px;
            height: 5px;
            border-bottom: 1px solid $font-color;
            border-right: 1px solid $font-color;
            transform: rotate(45deg);
          }
        }
      }
    }
    &-bascet {
      display: flex;
      align-items: center;
      column-gap: 30px;

      &-link {
        transition: 0.3s;
        svg g path {
          transition: 0.3s;
        }
        &:hover {
          svg g path {
            fill: #44c697;
          }
          color: #44c697;
        }
        column-gap: 5px;
        display: flex;
        align-items: center;
      }
    }
  }
}

.top-social-svg {
  path {
    transition: 0.3s;
  }
  &:hover {
    path {
      fill: #44c697;
    }
  }
}
h5 {
  margin-left: 5px;
}

.logo {
  display: flex;
  align-items: center;
  column-gap: 15px;
  &-text {
    span {
      color: #44c697;
    }
  }
}
.call-button {
  display: block;
  padding: 14px 46px;
  background: #44c697;
  border-radius: 3px;
  color: #ffffff;
  transition: 0.3s;
  &:hover {
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.267);
  }
}
.slider {
  background: center center no-repeat;
  background-image: url('/img/slider.png');
  background-size: cover;
  height: calc(100vh - 186px);
}
